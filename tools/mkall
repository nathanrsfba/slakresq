#!/bin/bash

. config || exit 1
. live/config || exit 1

if [ $FETCHINSTALL ]; then
    tools/fetchinstall || exit 1
else
    if [ ! -d install/a ]; then
        echo "No disksets are present in the install/ directory. Either populate it"
        echo "from the Slackware mirrors, or enable FETCHINSTALL in the config"
        echo "to download it automatically"
        exit 1
    fi
fi

if [ $FETCHUPDATES ]; then
    tools/fetchupdates || exit 1
fi

if [ $INSTALLUPDATES ]; then
    if [ ! -d updates ]; then
        echo "Requested updates, but no updates present. Skipped."
    else
        echo "Installing any pending updates..."
        tools/updatepkgs || exit 1
    fi
fi

# Check if the core disksets have changed
core="target/$LIVEKITNAME/01-core.$BEXT"
if [ -e "$core" ]; then
    for diskset in $CORE_DISKSETS; do
        if [ "`find install/$diskset -newer $core -print -quit`" != "" ]; then
            UPDATE_BASE=1
        fi
    done
else
    UPDATE_BASE=1
fi

# See if boot files need updating
ramfs="target/$LIVEKITNAME/boot/initrfs.img"
if [ ! -e "$ramfs" ]; then
    UPDATE_BOOT=1
elif [ live/livekitlib -nt "$ramfs" ]; then
    UPDATE_BOOT=1
else
    if [ "`find live/initramfs -newer $ramfs -print -quit`" != "" ]; then
        UPDATE_BOOT=1
    fi
    if [ "`find live/bootfiles -newer $ramfs -print -quit`" != "" ]; then
        UPDATE_BOOT=1
    fi
fi

if [ "$UPDATE_BASE" ]; then
    tools/mkbase || exit 1
    tools/buildlive || exit 1
elif [ $UPDATE_BOOT ]; then
    tools/buildlive -i || exit 1
fi

# See if any bundles need updating
for bundle in ${!BUNDLE[@]}; do
    bfile="target/$LIVEKITNAME/$bundle.$BEXT"
    update=''
    if [ ! -e $bfile ]; then
        update=1
    else
        for diskset in ${BUNDLE[$bundle]}; do
            if [ "`find install/$diskset -newer $bfile -print -quit`" != "" ] 
            then
                update=1
            fi
        done
    fi
    if [ $update ]; then
        if [ "${BUNDLE[$bundle]}" != "" ]; then
            tools/extdiskset $bundle || exit 1
        fi
        tools/squashbundle $bundle || exit 1
    fi
done

echo "Done."


